{
  "asi"           : false,     // If automatic semicolon insertion should be tolerated.
  "bitwise"       : true,      // If bitwise operators should not be allowed.
  "boss"          : false,     // If advanced usage of assignments should be allowed.
  "browser"       : true,      // If the standard browser globals should be predefined.
  "browserify"    : false,     // Defines globals available when using the Browserify tool.
  "couch"         : false,     // If CouchDB globals should be predefined.
  "curly"         : true,      // If curly braces around all blocks should be required.
  "debug"         : false,     // If debugger statements should be allowed.
  "devel"         : false,     // If logging globals should be predefined (console, alert, etc.).
  "dojo"          : false,     // If Dojo Toolkit globals should be predefined.
  "elision"       : true,      // Tells JSHint that your code uses ES3 array elision elements, or empty elements
  "eqeqeq"        : false,     // If === should be required.
  "eqnull"        : false,     // If == null comparisons should be tolerated.
  "esversion"     : 6,         // ECMAScript version to which the code must adhere.
  "evil"          : false,     // If eval should be allowed.
  "expr"          : false,     // If ExpressionStatement should be allowed as Programs.
  "forin"         : true,      // If for in statements must filter.
  "freeze"        : true,      // Prohibits overwriting prototypes of native objects.
  "funcscope"     : false,     // If only function scope should be used for scope tests.
  "futurehostile" : true,      // Enables warnings about the use of identifiers which are defined in future versions of JavaScript.
  "iterator"      : false,     // If the `__iterator__` property should be allowed.
  "jasmine"       : false,     // This option defines globals exposed by the Jasmine unit testing framework.
  "jquery"        : true,      // If jQuery globals should be predefined.
  "lastsemic"     : false,     // If semicolons may be ommitted for the trailing statements inside of a one-line blocks.
  "latedef"       : true,      // Warn if the variable is used before its definition.
  "loopfunc"      : false,     // If functions should be allowed to be defined within loops.
  "maxcomplexity" : 10,        // Maximum cyclomatic complexity per function.
  "maxdepth"      : 5,         // Maximum nested block depth per function.
  "maxerr"        : 50,        // Maximum amount of warnings JSHint will produce before giving up.
  "maxparams"     : 5,         // Maximum params per function.
  "maxstatements" : 25,        // Maximum statements per function.
  "mocha"         : false,     // Defines globals exposed by the “BDD” and “TDD” UIs of the Mocha unit testing framework.
  "module"        : true,      // Informs JSHint that the input code describes an ECMAScript 6 module.
  "mootools"      : false,     // If MooTools globals should be predefined.
  "moz"           : false,     // If mozilla specific syntax should be allowed.
  "noarg"         : true,      // If arguments.caller and arguments.callee should be disallowed.
  "nocomma"       : true,      // Prohibits the use of the comma operator.
  "node"          : false,     // If the Node.js environment globals should be predefined.
  "nonbsp"        : true,      // Warns about “non-breaking whitespace” characters.
  "nonew"         : true,      // If using `new` for side-effects should be disallowed.
  "nonstandard"   : false,     // If non-standard (but widely adopted) globals should be predefined.
  "notypeof"      : false,     // Suppresses warnings about invalid typeof operator values.
  "noyield"       : false,     // Suppresses warnings about generator functions with no yield statement in them.
  "phantom"       : false,     // If PhantomJS symbols should be allowed.
  "plusplus"      : false,     // If increment/decrement should not be allowed.
  "predef"        : false,     // An array of strings, the names of predefined global variables, or an object whose keys are global variable names, and whose values are booleans that determine if each variable is assignable.
  "proto"         : false,     // If the `__proto__` property should be allowed.
  "prototypejs"   : false,     // If Prototype and Scriptaculous globals should be predefined.
  "qunit"         : false,     // Defines globals exposed by the QUnit unit testing framework.
  "rhino"         : false,     // If the Rhino environment globals should be predefined.
  "scripturl"     : false,     // If script-targeted URLs should be tolerated.
  "shadow"        : false,     // If variable shadowing should be tolerated.
  "shelljs"       : false,     // If ShellJS globals should be predefined.
  "singleGroups"  : false,     // Prohibits the use of the grouping operator when it is not strictly required.
  "strict"        : true,      // Require the “use strict”; pragma.
  "supernew"      : false,     // Suppresses warnings about “weird” constructions.
  "typed"         : true,      // If typed array globals should be predefined.
  "undef"         : true,      // If variables should be declared before used.
  "unused"        : true,      // Warns when you define and never use your variables.
  "validthis"     : false,     // If `this` inside a non-constructor function is valid (this is a function scoped option only).
  "varstmt"       : true,      // When set to `true`, the use of VariableStatements are forbidden.
  "withstmt"      : false,     // If with statements should be allowed.
  "worker"        : false,     // If Web Worker script symbols should be allowed.
  "wsh"           : false,     // If the Windows Scripting Host environment globals should be predefined.
  "yui"           : false,     // YUI variables should be predefined.
  "globals"       : {}         // A map of global variables, with keys as names and a boolean value to determine if they are assignable.
}
